Introductions: Learn student's names


If in Japan
10% of Japanese can speak English well.
90% of Japanese cannot speak English well. 
138 out of 141 countries
lowest ranked in Asia

Why learn English?
Travel
Job
Get more knowledge: documentation - English First. 
Domestic demand for English speakers is increasing. Rakuten

Who likes English? Who doesn't like English?

It is not your fault

We will make learning English fun. I will make learning Python in English fun. 
Communicative activities. 
Icebreakers



You could use Scratch or Python
Use Python for those in the developer stream
Use Scratch for those in the non developer stream







Programming Skills

In a sense, you need two skills to be a programmer:

First, you need to know the programming language (Python) - 
you need to know the vocabulary and the grammar. 
You need to be able to spell the words in this new language properly and 
know how to construct well-formed "sentences" in this new language.

Second, you need to "tell a story". In writing a story, you combine words and sentences 
to convey an idea to the reader. There is a skill and art in constructing the story, 
and skill in story writing is improved by doing some writing and getting some feedback. 
In programming, our program is the "story" and the problem you are trying to solve is the "idea".

You will learn the "vocabulary" and "sentences" of Python pretty quickly. 
Once you learn one programming language such as Python, you will find it much easier 
to learn a second programming language such as JavaScript or C++. The new programming language has very different vocabulary and grammar but the problem-solving skills 
will be the same across all programming languages.


Show the diagram

Writing programs (or programming) is a very creative and rewarding activity. 
You can write programs for many reasons, ranging from making your living to solving a 
difficult data analysis problem to having fun to helping someone else solve a problem.

Our computers are fast and have vast amounts of memory and could be very helpful to us if we only knew the 
language to speak to explain to the computer what we would like it to "do next". 
If we knew this language, we could tell the computer to do tasks on our behalf that were repetitive. 
Interestingly, the kinds of things computers can do best are often the kinds of things 
that we humans find boring and mind-numbing.

This very fact that computers are good at things that humans are not is why you need to become 
skilled at talking "computer language". Once you learn this new language, 
you can delegate mundane tasks to your partner (the computer), 
leaving more time for you to do the things that you are uniquely suited for. 
You bring creativity, intuition, and inventiveness to this partnership.

In this class, we will try to introduce you to the art of programming. 
In the end you perhaps will not a professional programmer, but at least you will have some skills 
to look at a data/information analysis problem and develop a program to solve the problem.




Computer hardware architecture

Before we start learning the language we speak to give instructions to computers to develop software, 
we need to learn a small amount about how computers are built.

central processing unit
The Central Processing Unit (or CPU) is the part of the computer that is built to be obsessed with "what is next?" 
If your computer is rated at 3.0 Gigahertz, it means that the CPU will ask "What next?" three billion times per second. 
You are going to have to learn how to talk fast to keep up with the CPU.

The main memory 
The Main Memory is used to store information that the CPU needs in a hurry. 
The main memory is nearly as fast as the CPU. But the information stored in the main memory vanishes when the computer is turned off.

The secondary memory
The Secondary Memory is also used to store information, but it is much slower than the main memory. 
The advantage of the secondary memory is that it can store information even when there is no power to the computer. Examples of secondary memory are disk drives or flash memory (typically found in USB sticks and portable music players).

The Input and Output Devices
The Input and Output Devices are simply our screen, keyboard, mouse, microphone, speaker, touchpad, etc. 
They are all of the ways we interact with the computer.

As a programmer, your job is to use and orchestrate each of these resources 
to solve the problem that you need to solve and analyze the data you get from the solution. 
As a programmer you will mostly be "talking" to the CPU and telling it what to do next. 
Sometimes you will tell the CPU to use the main memory, secondary memory, network, or the input/output devices.


Terminology: interpreter and compiler

Python is a high-level language intended to be relatively straightforward for humans to read and write and for computers to read and process. 
Other high-level languages include Java, C++, PHP, Ruby, Basic, Perl, JavaScript, and many more. 
The actual hardware inside the Central Processing Unit (CPU) does not understand any of these high-level languages.

The CPU understands a language we call machine language. Machine language is very simple 
and frankly very tiresome to write because it is represented all in zeros and ones:

    001010001110100100101010000001111
    11100110000011101010010101101101
    ...

Machine language seems quite simple on the surface, given that there are only zeros and ones, 
but its syntax is even more complex and far more intricate than Python. 
So very few programmers ever write machine language. 
Instead we build various translators to allow programmers to write in high-level languages like Python or JavaScript and these translators 
convert the programs to machine language for actual execution by the CPU.


Words and sentences
Unlike human languages, the Python vocabulary is actually pretty small. 
We call this "vocabulary" the "reserved words". These are words that have very special meaning to Python.

you will encounter three general types of errors:

Syntax errors
These are the first errors you will make and the easiest to fix. A syntax error means that you have violated the "grammar" rules of Python. Python does its best to point right at the line and character where it noticed it was confused. The only tricky bit of syntax errors is that sometimes the mistake that needs fixing is actually earlier in the program than where Python noticed it was confused. So the line and character that Python indicates in a syntax error may just be a starting point for your investigation.

Logic errors
A logic error is when your program has good syntax but there is a mistake in the order of the statements or perhaps a mistake in how the statements relate to one another. A good example of a logic error might be, "take a drink from your water bottle, put it in your backpack, walk to the library, and then put the top back on the bottle."

Semantic errors
A semantic error is when your description of the steps to take is syntactically perfect and in the right order, but there is simply a mistake in the program. The program is perfectly correct but it does not do what you intended for it to do. A simple example would be if you were giving a person directions to a restaurant and said, "...when you reach the intersection with the gas station, turn left and go one mile and the restaurant is a red building on your left." Your friend is very late and calls you to tell you that they are on a farm and walking around behind a barn, with no sign of a restaurant. Then you say "did you turn left or right at the gas station?" and they say, "I followed your directions perfectly, I have them written down, it says turn left and go one mile at the gas station." Then you say, "I am very sorry, because while my instructions were syntactically correct, they sadly contained a small but undetected semantic error.".

Again in all three types of errors, Python is merely trying its hardest to do exactly what you have asked.





Intro

The programming language you will be learning is Python. 
Python is an example of a high-level language; 
other high-level languages you might have heard of are C++, PHP, Pascal, C#, and Java.


The single most important skill for a computer scientist is problem solving. 
Problem solving means the ability to formulate problems,
think creatively about solutions, 
and express a solution clearly and accurately.


Goals
Learn about the interpreter
Script and immediate mode
Printing
Introduce them to Errors

Conversing with Python

A: Reads to B
B: Writes on their shared whiteboard
A & B Read and execute the command

A. The engine that translates and runs Python is called the Python Interpreter. 

B. There are two ways to use the python interpreter: immediate mode and script mode. 

Review

What is the name of the engine that runs python?

What are the ways to use the python interpreter?

A. In immediate mode,  
you type Python expressions into the Python Interpreter window, 
and the interpreter immediately shows the result:

B. Let's open our python interpreter in immediate mode. 

A. Show them how to open command prompt
Open up your command prompt and type "Python". Do you see the python prompt?

Open up your python interpreter in Immediate mode then type: print('hello world').

To quit immediate mode, type quit() at your Chevron prompt.





Script mode: Goal create a python script that prints hello world. 

You can write a program in a file and use the interpreter to execute the contents of the file. 

Such a file is called a script. Scripts have the advantage that they can be saved to disk, printed, and so on.



1. Start your python interpreter in Immediate mode and print 'hello world' to the screen. 
2. Quit your interpreter.

Do you have Visual Code Studio?


We are going to create a Python file. 
A python file is called a Python Script. 



On your computer, create a folder called pythonEnglish.
Open python in Visual Studio Code by doing the following
1. Go to the Visual Studio Code menu


Create a new file in Visual Studio Code by doing the following.
1. Go to the Visual Studio Code menu
2. Click on 'File'
3. Click on 'New File'
4. Save the file as 'hello.py'
5. In hello.py, type the following: print('Hello World')
Yay! You just created your first Python Script

TEC 4: got up to here 05082020. Start here: 12082020 

Running your hello.py Python script
1. Go to the Visual Studio Code menu
2. Click on 'File'
3. Click on 'Open'
4. Find your folder called 'pythonEnglish'
5. Click on 'pythonEnglish'
6. Click on 'Open'. 
7.  Go to the Visual Studio Code menu
8. Click on 'Terminal'
9. Click on 'New Terminal'
10. In the terminal type the following: python hello.py

What do you see?

You have just run your first Python Script.


TEC 3: got up to here 05082020. Start here: 12082020 

In pythonEnglish, create a python script called helloSteve.py
In helloSteve.py, type the following: print('Hello Steve')
Execute helloSteve.py

1. In your python interpreter in Immediate mode
 print the following: 
"Are you single?"
"Yes, I am"

2. Create a python script called family.py. 
The script prints the following:
"Are you like your Dad or Mum?"
"I am like my ____"


Review: Create a python script called name.py
The script prints the following:
"What is your name?" 
"My name is _____"
Execute the program. 



Words:
NameError: - a type of run-time error
Syntax error
Logic error
Semantic error

3. Create a python script called syntaxError1.py. 
In the file, type the following: primt('I like Dolphin')

How do we fix this syntax error?

What are the types of errors?

4. Create a python script called Error2.py
In the file, type the following: You belong to me

What type of error is this?

How do we fix this syntax error?


4. In your python interpreter in Immediate mode,  
Type the following: I like chicken
On your whiteboard, write what you see. 

How do we fix this syntax error?



Logic error: A logic error is when your program has good syntax but there is a mistake in the order of the statements or perhaps a mistake in how the statements relate to one another. 

Type the following in a file called Error4.py
print('My name is Satomi')
print('What is your name?')
Save the file then execute the file. 
What type of error do you think this is?

Start here with class 1

How do we fix this logic error?

print('Fuji san')
print('What is the name of the mountain in Japan?')

How do we fix this logic error?



print('I live in Ikebukuro')
print('Where do you live?')

How do we fix this logic error?


Semantic Error

I want my result to be 6. Which of these is correct?

3 + 1 * 2
(3 + 1) * 2

Semantic error is context dependent

===========================================================================================================

Midterm

1. What programming language are you learning?

2. What is the name of the engine that translates and runs Python?

3. What are the two ways to use the Python Interpreter?

4. In your command prompt, what command do you type to start the Python in Immediate mode?

5. What is the name of this?: >>>

6. How do you stop the Python in Immediate mode?

7. Start Python in Immediate mode then type the following: print(“Hi Steve”).  What is the result?

8. What are three types of errors in Python?

9. What type of error is this?
    >>> You belong to me

10. How do you fix the following error?

>>> primt ("Hello World!")
    File "<stdin>", line 1
    primt ("Hello World!")
                        ^
    SyntaxError: invalid syntax
    >>>

11. What type of error is this?
    >>> print(“My name is Satomi”)
    >>> print(“What is your name?”)

12. How do you fix the following error?

    >>> print("Mount Fuji")
    >>> print("What is the name of a mountain in Japan?")


13. Which of these is a Python file:
    a. hello.c
    b. hello.py

14. What is the name of a Python file?

15. I have a python file called family.py. What command do I type in the directory in which the file is located to run the file?

===========================================================================================================

Review
print("What's up")
print("The sky")
print("funnny!!!")

===========================================================================================================


Creating a python script. 

Also give the text about debugging and experiemental debugging to read. 


Added exercises
Exercises
Start your command prompt. Get a paper and pen ready
Type print("hello"). Python executes this, which has the effect of printing the letters h-e-l-l-o. Notice that the quotation marks that you used to enclose the string are not part of the output.
Type "hello" and Tell me the result.  Make notes of when you see the quotation marks and when you don’t.
Type cheese without the quotation marks. Tell me the error 
Type the statement 6 + 4 * 9 at the Python prompt and hit enter. Is this a floating point number or integer?



Day 3

review: Print
Learning points
statement
integer
floating points
modulo


What are the datatypes in Python? #string, integer, float. 
Write an example of a string
Write an example of an integer
Write an example of a float

Exercises
Type a statement that prints all integer numbers between 1 and 10
Type a statement that prints all the odd numbers between 1 and 10
Type a statement that prints the floating point number 1.2

Using the type function

If you are not sure what type a value has, you can use the Python's type function to find out
Open your python interpreter in immediate mode and type the following: type(3.2)
What do you see?
Open your python interpreter in immediate mode and type the following: type('Steve is handsome')
What do you see?

Type the following in python in immediate mode:type(9) What do you see?

Variables

Create a variable called city. Assign the name of your city to city.






#Comments
Give the text to read about comments for them to read. 
A comment in a computer program is text that is intended only for the human reader — it is completely ignored by the interpreter.
Introduce comment and # - Dictation. 
1. print("I like banana.") #So do I 
2. print("Hello, World!") # Isn't this easy!

Day 4
Learning points
Review
concatenate
Installing Visual Studio Code

 

Find 5 modulo 3. Can you tell me the result?
Find 4 modulo 2. What shows up on the screen?
Find 10 modulo 3. Please tell me the result
Find the addition of 2 and 3. Can you tell me what you see?

Test questions
1. The engine that translates and runs Python is called what?
2. What is this: >>>
3. At the python prompt print the name of your school
4. Print your name and add your last name as a comment. 
5. What are three types of errors?
6. What type of error do you get if you type school in your python interpreter without the quotation?
7. What is the modulo sign?
8. How do you find 8 modulo 5 in your python interpreter?
9. What is the result of 8 modulo 5?
10. What is the result of 9 modulo 3?
11. What is the error you get if you type 5    20 in your python interpreter?
12. How do you find the addition of 2 and 3 in your python interpreter?
13. Write am integer
14. Is 9 an odd or even number?
15. Is 4 an odd or even number?
16. Write a floating point number
17. Type a statement that prints Four point six as a floating point number 
18. Type a statement that prints Four point six as a string
19. Whhat types are these:
    a. "50.2"
    b. 50.2
20. What types are these:  
    a. 12
    b. "12"

7b. What is the result of 8 modulo 5?
8. How do you find the addition of 2 and 3 in your python interpreter?
9. Write an integer number: 
10. Write a floating point number: 


Day 5 Dec 3rd 

English vocabulary
classified
manipulate 
angle  

Terms and concepts

integer: 4 is an integer, and "Hello, World!" is a string
string
value: 
These values are classified into different classes, or datatypes. A value is one of the fundamental things — like a letter or a number — that a program manipulates
class or datatypes 
single quotes
double quotes
triple single quotes
triple double quotes
Strings in Python can be enclosed in either single quotes (') or double quotes ("), 
or three of each (''' or """)
Triple quoted strings can even span multiple lines
enclosing quotes in quotes. 
type() function: If you are not sure what class a value falls into, Python has a function called type which can tell you.

Exercises

1. Find the type for the following by using Python's type function: 17 and "17"

    a. type(17)
    b. type("17")

2. Find the type for the following by using Python's type function: 17 and "17"

    a. type(3.2)
    b. type("3.2")

3. Write the following characters on a piece of paper
    a. single quote
    b. Single quotations
    c. Triple single quotations

4. Write the following characters on a piece of paper
    a. double quotation
    b. double quotations
    c. triple double quotations

5. Type thhe following in your python interpreter
    a. type ('handsome Steve')
    b. type ("handsome Steve")
    c. type (" " "handsome Steve" " ")
    d. type('''handsome Steve''')


6. Type the following in your python interpreter
    a. type('ugly Salami')
    b. type("ugly Salami")
    c. type(""" ugly Salami """)
    d. type('''ugly Salami''')

7. Type the following in your python interpereter
    a. print(''' "Oh no", Wakana said''')
    b. print(""" 'I like water' Mizuki said """)

8. Type the following in your python interpreter
    a. print("' Oh no Godo', Salami said")
    b. print('"Yahoo!", Yaho said')


    

Type the following in your python intepreter and tell me what you see: type("Hello, World!")

Type the following in your python intepreter and tell me what you see: type(17)

Type the following in your python intepreter and tell me what you see: type(3.2)

Type the following in your python intepreter and tell me what you see: type("17")

Type the following in your python intepreter and tell me what you see: type("3.2")

What is this '

What is this ' '

What is this "

What is this " "

What is this ''' '''

What is this """ """

Use your python interpreter to find out what data type this is:  'This is a string'

Use your python interpreter to find out what data type this is:  "And so is this."

Use your python interpreter to find out what data type this is: """and this."""

Use your python interpreter to find out what data type this is:  '''and even this...'''

print('''"Oh no", she exclaimed, "Ben's bike is broken!"''')


Day 7
Test Questions(Doesn't include Steve's Questions)

Name two types of errors
What is the result when you type print("Hello World")
How do you concatenate the following words: "What" "is" "your" "problem" "?"
Is this a string or an integer "17"
Is this a string or an integer 17
What datatype is this: 17.2
What is the result of 5 modulo 3?

Day 8: Values and data types: Goal: Reviewing the test and using type() in python
Review the test 
Board data types/classes: 
integer 
string 

= assignment token


They will do these running dictation style
print("Bruce's beard")
print('The knights who say "Ni!"'.)
print('''"Oh no", she exclaimed, "Ben's bike is broken!"''')

Demonstrate the task with steve.

Day 9 Goal: Students will understand how to use the type function 
and assignment token 


Write and raise the flag. 
Review single quote, double quotes, triple single quote, triple double quotation 


Day 10: Students will understand the concepts of variable, assignment token, assignment statement, value
Variables, Assignment token 


Review: the different types of strings in Python.  
    What data type is this?
    They read statements to their partners. Their partners write the sentences and then board the datatype
    'A day without sunshine is like, night.'
    "Money talks... but all mine ever says is goodbye!"
    '''If at first you don't succeed, skydiving definitely isn't for you. '''
    """ If you want to be criticized, marry. """  

(At the back of the class. They then board. )


message = "What is your problem?" (Label this with message, assignment token, assignment statement, value)

'message' is the variable
A 'variable' is a name that refers to a value. 

= "What is your problem?" is the assignment statement

"What is your problem?" is the value. 

The assignment statement gives a value to a variable

This statement assigns the string value "What's is your problem?" to a variable named message.







Day 11

Review: assignment token

Goal: Students will be able to give instructions to assign values to variables. 

Dictate to their teammates the following:

Create a variable called message. Assign "What is your problem?" to message
They solve this in groups. 

Then they type in their python interpreter 


Board: message = "What's your problem?". They label and board statements labeling the different parts of the 
statement. e.g. The variable name is message. The assignment statement is ..., The value given to the variable is... 


(Exercise: Labeling the assigment statement, the assignment token, and the value, the difference between)

fruit = "My favorite fruit is tomato"

Create a variable called fruit. Assign "My favorite fruit is tomato" to fruit 



Send one person from a team out of the class. 

Board: n = 17 for the remaining teammates to see. Erase it. The teammates who saw the boarded statement have to give 
give the correct instructions to their classmate. 



What is the variable name? The variable name is ....
What is the assignment statement? The assignment statement is ...
What is the value given to the variable? The value given to the variable is... 

(Dictation to each other)
 A teammate steps out, and comes back in. They read the instructions to their teammate

pi = 3.14159
What is the variable name? 
What is the assignment statement?
What is the value given to the variable?


Dictation

1. In your python interpreter, type the following: message = "What is your problem?"
2. display the value saved in message


n = 17
pi = 3.14159


Create a variable called name. Assign your name to variable. 


Get notes ready for steve

We use variables in a program to “remember” things, perhaps the current score at the football game. 
But variables are variable. This means they can change over time, just like the scoreboard at a football game. 
You can assign a value to a variable, and later assign a different value to the same variable. 

>>> message = "What's up, Doc?"
>>> message 
'What's up, Doc?' 
>>> n
17
>>> pi
3.14159

Show them a picture of 
In your python intepreter, type day = "Thursday"

DAY 12

Correct mistake of assignment statement 

Review: 

Students go outside: come back in and their partners give them the instructions
1a. Create a variable called vacation = "Vacation is over. Cry, Cry, Cry!" 

1b. The partners that come in will read the instructions to their partners 
    What is the name of the variable? 

    What is the assignment token?

    What is the assignment statment? 

    What is the value that is assigned?

Switch

2a. Create a variable called honey = """I miss my honey Cry, Cry, Cry!"""

2b. The partners that come in will read the instructions to their partners 
    What is the name of the variable? 

    What is the assignment token?

    What is the assignment statment? 

    What is the value that is assigned?

3. Raise the flag 
    single quote 
    double quote 
    triple single quote  
    triple double quotes

4. There are four ways to create strings in python. Change this statement to a string
using the four ways: I eat Salami

5. Given the following: 100, what is the python command to find the datatype of 100?

6. What would be the result of type(“100.85”) in the python interpreter? 

7. What would be the result of type(182.85) in the python interpreter?	

Project: Create a program identify the various parts using Comments

2nd TERM

Divide classroom into teams. Divide the board into the same number of sections as the number of teams you have
Put the vocabulary for the first word:  Ask students to get the rest.
They board the rest of the vocabulary using relay style.
It is a race.  

Extension:
Hot seat with the vocabulary words
Introduce the words in English

Q: Hi, Steve
A: 

Q: How was your vacation?
A: 

Q: What did you do?
A: I slept all day

Day 2:
Day 1: Semester Icebreaker and Review

Their partners read and then the other partner boards 
example: Write an integer number.

 

Write a floating point number 
Write the modulo sign?
Using the print command, write a statement that prints all numbers between 1 and 10

Type a statement that prints the floating point number 1.2
Type a statement that finds 5 modulo 3
What is the concatenation sign?

Day 3: Variable names and keywords

Divide students into a teams. Have students create team names and put their team names on the board. Then students numbers 
on the board for answer spots. They will give instructions to their partners. For each each problem they answer correctly, 
they get and put a point on the board at the number they got correct. 

Say to their partner 
'
''
"

" "
''' '''
""" """

What is name of this: '
What is the name of this: ' '
What is the name of this: " "
What is the name of this: ''' '''

On their computers 


Concatentate the following: "I" "love" "you"
Using the type function, find out what datatype is this value: 3
What datatype is this value: "Hello Steve!"

Use the 

type function to find out what datatype this is: "Hello, World!"

example

Create a variable called message. Assign 'A day without sunshine is like, night.' to message
What is the assignment statement? What is the assignment token? What is the value is the value that is assigned?

Exercises to lead to reading:


In your python interpreter, create a variable called day. Assign "Thursday" to day then print day to the screen

Change the value of the variable day to "Friday" then print the new value to the screen 

Change the value of day to 21 then print the new value to the screen. 

Improving: Reading Exercises, Writing, Listening, Speaking Exercises. 

Introduce the reading. 

We use variables in a program to “remember” things, perhaps the current score at the football game. But variables are variable. 
This means they can change over time, just like the scoreboard at a football game. You can assign a value to a variable, 
and later assign a different value to the same variable. (This is different from maths. In maths, if you give ‘x‘ the value 3, 
it cannot change to link to a different value half-way through your calculations!)

You’ll notice we changed the value of day three times, and on the third assignment we even made it refer to a value that was of a different type.
A great deal of programming is about having the computer remember things, e.g. 
The number of missed calls on your phone, and then arranging to update or change the variable when you miss another call.

Execerpt: How to Think Like a Computer Scientist: Learning with Python 3 Documentation, Release 3rd Edition

Day 3: Variable names and keywords

Day 4
Vocabulary
arbitrarily
digits
underscore
uppercase
convention
multiple
situations
illegal
character
syntax
structure
meaningful
document (v) e.g. to document something 

Warmup 

evaluate = show

Create a variable called message. In message save the value: "What's up,  Doc?" Ask the interpreter to evaluate
the variable. What is the result?

Create a variable called n. In n save the value: 17. Ask the interpreter to evaluate
the variable. What is the result?

Create a variable called pi. In pi save the value: 3.14159. Ask the interpreter to evaluate
the variable. What is the result?

In your python interpreter, create a variable called day. Assign "Thursday" to day then print day to the screen

Change the value of the variable day to "Friday" then print the new value to the screen 

Change the value of day to 21 then print the new value to the screen. 

Improving: Reading Exercises, Writing, Listening, Speaking Exercises. 

Introduce the reading. 

We use variables in a program to “remember” things, perhaps the current score at the football game. But variables are variable. 
This means they can change over time, just like the scoreboard at a football game. You can assign a value to a variable, 
and later assign a different value to the same variable. (This is different from maths. In maths, if you give ‘x‘ the value 3, 
it cannot change to link to a different value half-way through your calculations!)

You’ll notice we changed the value of day three times, and on the third assignment we even made it refer to a value that was of a different type.
A great deal of programming is about having the computer remember things, e.g. 
The number of missed calls on your phone, and then arranging to update or change the variable when you miss another call.

Execerpt: How to Think Like a Computer Scientist: Learning with Python 3 Documentation, Release 3rd Edition

Show the reading. Go through it with class. Ask students to underline words they don't understand. 
Rules for making variable names

Class 3: underscore, meaningful variable names, then do operator exercises

Variable names and keywords
introduce: 
underscore
letter
digit
uppercase
lowercase 

Create a variable called what_time_did_you_sleep_last_night. Save "3AM". Show the result. 

Create a variable called Teacher, assign "Handsome Steve" to teacher. 

Create a variable called teacher. Save
"Ugly Salami" to teacher. Ask the interpreter to evaluate the variables. What are the results?

Create a variable called my_name. Save your name to my_name. 

Create a variable called price_of_tea_in_china. Save "20 Yen" to price_of_tea_in_china.

Type the following. Tell me what you see.  
76trombones = "big parade"
class = "Computer Science 101"


Switch
more$ = 1000000
finally = "I can sleep"



meaningful.
Create a variable called car, save "banana" to car.
Create a variable called fruit, save "banana" to fruit. 
Which is more more meaningful?

How to practice reading documentation.

Test Questions

1. Create a variable called 'teacher', assign your "Salami" to 'teacher'. Then assign the 
value 'Mogi' to teacher. 

2. What is the value of teacher?


For questions 2 and 3. 

>>> month = "October"
>>> month = "November"
>>> month = "December"

2. What is the value of month?

3. How many times have we change the value assigned to month?

For questions 4 and 5

>>> day = "Thursday"
>>> Day = "Friday"

4. What is the value of Day?


5. What is the value of day?


6. Which of these is illegal for a variable name?

 a. 1year = "2019"
 b. year1 = "2019"

7. Is this a legal variable name? 

  iLove¥ = true

8. Which of these is more meaningful as a variable name?
   a. school = "Tokyo Electronic College" 
   b. love = "Tokyo Electronic College"?

9. Create a variable called country. Assign the value of the name of your country to country. 
The value of country should be in lowercase.

10. Create a variable called my_name. Assign the value of your name to name. Your name 
should be in uppercase. 


Answers

1. 
teacher = 'Salami' or teacher = "Salami"
teacher = 'Mogi' or "Mogi"

2. 'Decemeber' (It doesn't have to have the quotes)

3. 3 times 

4. 'Friday'

5. 'Thursday'

6. a.

7. No

8. a. 

9.
country = "japan"

10.
my_name = "THEIR NAMES" (Their name should be in uppercase)


Pre-Test Review

1. Create a variable called city, then assign "Tokyo" to city. Then assign "Osaka" to city. What is the value of city?

2 Create a variable called car, thhen assign "Ferrari to car. Then assign "Toyota to car. What is the value of car?

3. Create a variable called computer then assign "Sony to computer. Then assign "Panasonic" to computer. What is the value value of computer?

4.
    >>> name = "Hosun"
    >>> name = "Steve"
    >>> name = "Salami"
    >>> name = "Tope"

    a. What is value of name?
    b. How many times have we changed the value assigned to name?

5. 
    >>> year = "2017"
    >>> year = "2018"
    >>> year = "2019"

    a. What is thhe value of year?
    b. How many times have we change the value assigned to year?

6. >>> Home = "Chiba"
   >>> home = "Saitama"

   a. What is the value of Home?
   b. What is the value of home?

7. 
    >>> My_favorite_place = "Ikebukuro"
    >>> My_favorite_place = "Ueno"
    >>> my_favorite_place = "Shibuya"

    What is the value of my_favorite_place?


8. Which of these is illegal for a variable name?
    12month = "December"
    month12 = "December"


9. Which of these is illegal for a variable name?
    a. 2age = 17
    b. age2 = 17


10. Which of these is a legal variable nane?
    a. iLoveYen = True
    b. iLove¥ = True 

11 Which of these is more meaningful as a variable namme?

    a. shoe = "Nike"
    b. place = "Nike"

12. Which of these is a legal variable name?
    a. iLove$ = True
    b. iLoveDollars = True



13. Which of these is more meaningful for a variable name?
    a. address = "2 Higashi Ikebukuro"
    b. food = "2 Higashi Ikebukuro"

14. Create variable called school. Assign the name of your school to school. The value of school should be in lowercase 

15. Create a variable called my_hero. Assign the name of your hero to my_hero. The value of my_hero should be in uppercase. 

 
Next class

For the 1st and 2nd classes on Dec 4th, could you cover the reading on pages 15, 16 and 17. 

Specifically: 

Class 3: Yaho and yamato 11b
Wakana & hayata 10
Shota & Tsubasa: 7
Nagi & Ryota: 7
Mizuho & Masato: 11a
Marin, Nanami: 5



2.4 Statements
2.5 Evaluation
2.6 Operators and operands
2.7 Type converter functions
2.8 Order of operations

Explain the following terms using examples
Statement
expression
operands
Operators and tokens: 
addition vs plus                +
multiplication vs muliplied by/times *
division vs divided by          /
Subtraction/Subtract vs minus           -
exponentiation vs raise x to the power y        **
floor division operator vs division operator    //
front slash 
explain that floor division rounds down. 

back slash
len  

brackets/paranthesis.

Exercises.

Put students in pairs put questions on pieces of paper and tape the questions to the walls around the class
It will be a like a treasure hunt. Put team names on the board. Award a point to each team for every question they get correct.  


1. In your python intepreter, type the following expressions:

 a 4 multiplied by 4
 b 2 plus 3 times 5
 c 2 divided by 3
 d. 4 minus 2 diuided by 2
 What are the results?

2. In your python intepreter, type the following expressions:
 a 1 divided by 2
 b 8 multiplied by 5
 d 3 minus 1 multiplied by 5
 d. 6 plus 3 times 3
 What are the results?


 3. In your python intepreter, type the following expressions:
a. len("Steve"). What is the result?
b. y = len("Tokyo"). What is the value of y?

4. In your python intepreter, type the following expressions:
a. y = len("Electronic"). What is the value of y?
b. len("College"). What is the result?

5. Find:
a. 20 plus 32
b. Create a variable called hour. In 'hour' save the value 60. Subtract 1 from hour. What is the result. 

6. Create a variable called hour. Save 1 to hour. Then create a variable called minute. Save 3 to minute. 
    Multiply hour by 60 and then add minute to the result. What is the result?

7. In your python interpreter, create a varibale called minutes, save the value 360 to minutes. Divide minutes by 60. 
    What is the result?

8. Create a variable called minutes. Assign the value 645 to minutes. Divide minutes by 60 and assign the result to 
    a new variable called hours. What is the result?

9. Using the exponentiation operator. Raise 2 to the power 3. What does the interpreter evaluate result to be?

10 Using the exponentiation operator. Find 3 to the power or 2. What does the interpreter evaluate the result to be?

11. Using the floor division operator, find result of 6 double front slash 4. 

12. Using the division operator, find the result of 6 single fron slash 4

13. Using the division operator, find the result of 7 single front slash 4

14. Using the floor division operator find the result of 7 double front slash 4

15. What is the result of the following: -6//4

16. What is the result of the following -7//4

17. Evaluate the following expression in your python interpreter. (five plus nine ) times (15 minus 7)

18. Evaluate the following expression (1 plus 1) raised to the power ( 5 minus 2)

Additional Exercises
* = multiplication token
** = exponentiation token

Using python's len function find the length of the word "College".
Using python's len function, find the length of the word "Ikebukuro"

Create a variable called minutes. Assign the value 645 to minutes. 
Divide minutes by 60 and assign the result to a new variable called hours. 
Print hours to the screen. 


//Change the exercises to so operators are spelled out vs the tokens written out. 
//get questions for next class ready

Class 1
kaito & hiroyuki: finished type converter functions exercises
kaito & fuga: type converter: 1
Rino & Minori: 17
Hosun & Che, toma: 18
Tetsu & Ryota: 18
Ryo & Ryuichi: 16


Extra exercises for those who finish first. 






Type converter functions. 
In Python, we can convert from one data type to another. For example, we can convert
from a float to an int. 

The int function can take a floating point number or a string, and turn it into an int.
In your python interpreter type the following: 

show how do the following conversions

int => float
int => string
float => int 
float => string
string => float
string => int 

1. convert the following to integers
3.14
3.9999
3.0
-3.999
"2345" 
"23 bottles"


2. convert the following to integers
 3.8
 6.9999
 4.0
 -2.984
 "889"
  "5 cars"

3. convert the following to floats
 "3.8"
 "6.9999"
 4

4. convert the following to floats
 "-2.984"
 "889"
  "5 cars"

5. convert the following to strings
 3.8
 6.9999
 4

6. convert the following to strings
 -2.984
 889
  5

7. In these expressions, we are converting from what datatype to what datatype? 
float(15)
str(14.5)
int(19.3)

8. In this expression, we are converting from what datatype to what datatype? 
float("15.23")
str(1564)
int("893")



9. We are converting from what type to what type in this expression?
float(17)

float("123.45")

10.  We are converting from what type to what type in this expression?
str(17)

str(123.45)


Explain that asterix is * and Parentheses
Practice pronouncing these words above and Exponentiation and precedence

Order of operations

Parentheses have the highest precedence
What is the answer of this: (1+1)**(5-2) #8
1. open bracket one plus one close bracket asterix asterix open bracket five minus two close bracket

2. Two multiplied by open bracket three minus one close bracket
# 2 * (3-1) #4


Exponentiation has the next highest precedence

3. What is the result of the following: two double asterix asterix one plus one
# 2**1+1 
4 What is the result of the following: 3 times one raised to the power three 
#3*1**3 


Multiplication and both Division operators have the same precedence, which is higher than Addition and
Subtraction
 2*3-1
 5-2*2 
 
 Operators with the same precedence are evaluated from left-to-right
 6-3+2

Operators are usaually evaluated left-to-right. However an exception to the left-to-right 
left-associative rule is the exponentiation operator

5. 3 ** 2 ** 3: three to the power two raised to the power three.

6. (3 ** 2) ** 3: Open bracket three double asterix two close bracket raised to the power three

Test Questions:

 1. What are the names of these operators. Show your results below
    a. + 
    b. - 
    c. *
    d. ** 
    e. /
    f. //


2. Fill in the blank
    a. 2 _________ 2 = 4  (hint: 2 + 2 = 4)
    b. 2 _________ 2 = 0  (hint: 2 - 2 = 0)
    c. 3 _________ 3 = 9  (hint: 3 * 3 = 9)
    d. 3 _________ 3 = 9  (hint: 3 ** 3 = 9)
    e. 3 _________ 3 = 1  (hint: 3 / 3 = 9)
    f. 3 _________ 3 = 0  (hint: 3 // 3 = 9)

3. What is the value y in this expresssion: y = len("Tokyo") Show your results below

4. Create a variable called year. Save 2019 to year. Add one to year. What is the result? Show your results below
   >>
   >>
   >>
   >>
   >>

5. Create a variable called age. Save 17 to age. Subtract one from age. What is the result? Show your results below
   >>
   
   >>
   >>
   >>
   >>

6. Create a variable called 'number'. Save 3 to number. Multiply 'number' by 1. What is the result? Show your results below
   >> 
   >> 
   >> 
   >>
   >>

7. Create a variable called 'number'. Save 8 to number. Divide 'number' by 2. What is the result? Show your results below
   >> 
   >> 
   >> 
   >>
   >>

8. Create a variable called 'number'. Save 3 to number. Raise number by the power 1. What is the result? Show your results below
   >> 
   >> 
   >> 
   >>
   >>

9. Convert 3.999 to an int. Show your results below
   >> 
   >> 
   >> 
   >>
   >>

10. Convert "3" to a float. Show your results below
   >> 
   >> 
   >> 
   >>
   >>

11. Convert 3 to a string. Show your results below
   >> 
   >> 
   >> 
   >>
   >>

12. Create a variable called minutes. Assign the value 300 to minutes. 
Divide minutes by 60 and assign the result to a new variable called hours. 
Print hours to the screen. Show your results below
   >> 
   >> 
   >> 
   >>
   >>



Answers
1. 
    a. Addition operator
    b. Subtraction operator
    c. Multiplication operator
    d. Exponentiation operator
    e. Division operator
    f. Floor Division operator 

2. 
    a. plus
    b. minus
    c. times/multiplied by (either of these is fine)
    d. raised to the power/to the power
    e. divided by/front slash
    f. double front slash

3. 5

4. Create a variable called 'year'. Save 2019 to 'year'. Add one to 'year'. What is the result? (If they have the first two lines below, please give them the point.) 
Show your results below
   >> year = 2019
   >> year + 1
   >> 
   >>
   >>

5. Create a variable called 'age'. Save 17 to age. Subtract one from 'age'. What is the result? (If they have the first two lines below, please give them the point.)
Show your results below
   >> age = 17
   >> age - 1
   >>
   >>
   >>

6. Create a variable called 'numberz'. Save 3 to number. Multiply 'number' by 1. What is the result? (If they have the first two lines below, please give them the point.)
Show your results below
   >> number = 3
   >> number * 1
   >> 
   >>
   >>

7. Create a variable called 'number'. Save 8 to number. Divide 'number' by 2. What is the result? (If they have the first two lines below, please give them the point.)
Show your results below
   >> number = 8
   >> number/2
   >> 
   >>
   >>

8. Create a variable called 'number'. Save 3 to number. Raise number by the power 1. What is the result? (If they have the first two lines below, please give them the point.)
Show your results below
   >> number = 3
   >> number ** 1
   >> 
   >>
   >>

9. Convert 3.999 to an int. Show your results below 
   >> int(3.999)
   >> 
   >> 
   >>
   >>

10. Convert "3" to a float. Show your results below
   >> float("3")
   >> 
   >> 
   >>
   >>

11. Convert 3 to a string. Show your results below 
   >> str(3)
   >> 
   >> 
   >>
   >> 

12. Create a variable called minutes. Assign the value 300 to minutes. 
Divide minutes by 60 and assign the result to a new variable called hours. 
Print hours to the screen. Show your results below
   >> minutes = 300
   >> hours = minutes/60
   >> print(hours) OR hours
   >>
   >>



Class 2:


Making their first program

Make their first program.(In pairs students will make this program.)
Put the instructions on different strips of paper and paste them around the classroom, numbering
each strip of paper. Students will walk around and find the strips of paper in order and 
read the instruction to their partners. Their partners will write. Once a student is done reading,
they will switch places and the next student (the student who was sitting down) will look for the next
quesiton in order and read it to their partner. Students will repeat the steps until they have
written all the instructions to the program. 

Program 1
Open your text editor
Type the following text into a single file named ex1.py
1 print("Hello World!")
2 print("Hello Again")
3 print("I like typing this.")
4 print("This is fun.")
5 print('Yay! Printing.')
6 print("I'd much rather you 'not'.")
7 print('I "said" do not touch this.')

Using Input, composition, operators on strings

Input section.

Model: Using python's input function, ask a user for their teacher's name. Save the value to a variable called
teacher. Then print teacher. Your teacher's name is: 


1. Create a program called input2. Using python's input function, ask a user for their name. Save the value to a variable called name. 
Then print: Your name is: 

2. Create a program called input3. Using python's input function, ask a user for their age. Save the value to a variable called age. Using 
python's type() function, find out what data type age is. Print the data type to the screen. 

Composition section:

3. Create a program called input4. Using python's input function, ask a user for a float number. 
Save the result in a variable called float_number. 
Using python's type converter function, convert float_number to an integer. Save the result to a variable called
integer_number. Then print the integer_number 

4. Ask a user for a number. Save the value to a variable. Convert the number to a string and then print the 
value. 

Operators on strings:

5. Ask a user for their first name. Ask a user for their phone number. Print the user's name and phone number
as follows: 'Your name is ______  and your phone number is ________' 

6. Ask a user for their school name then ask a user for thheir school location. 

Create a program. Using Python's input 




On Windows, type python instead of python3.6 like this: python ex1.py




Open up 


Reading Documentation
Converting expressions they see into instructions which they give to their partners who 
should then construct the expressions. 
 


len 
